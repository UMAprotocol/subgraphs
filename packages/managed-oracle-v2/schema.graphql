enum OptimisticPriceRequestState {
  Invalid
  Requested
  Proposed
  Expired
  Disputed
  Resolved
  Settled
}

type OptimisticPriceRequest @entity {
  "ID is the PriceIdentifier ID + the timestamp + ancillaryData (if available)"
  id: ID!

  identifier: String!

  ancillaryData: String!

  time: BigInt!

  requester: Bytes!

  currency: Bytes!

  reward: BigInt!

  finalFee: BigInt!

  proposer: Bytes

  proposedPrice: BigInt

  proposalExpirationTimestamp: BigInt

  disputer: Bytes

  settlementPrice: BigInt

  settlementPayout: BigInt

  settlementRecipient: Bytes

  state: OptimisticPriceRequestState

  requestTimestamp: BigInt

  requestBlockNumber: BigInt

  requestHash: Bytes

  requestLogIndex: BigInt

  proposalTimestamp: BigInt

  proposalBlockNumber: BigInt

  proposalHash: Bytes

  proposalLogIndex: BigInt

  disputeTimestamp: BigInt

  disputeBlockNumber: BigInt

  disputeHash: Bytes

  disputeLogIndex: BigInt

  settlementTimestamp: BigInt

  settlementBlockNumber: BigInt

  settlementHash: Bytes

  settlementLogIndex: BigInt

  customLiveness: BigInt

  bond: BigInt

  eventBased: Boolean
}

type CustomBond @entity {
  "ID is the hash of requester, identifier, ancillaryData, currency"
  id: ID!

  managedRequestId: String!

  currency: Bytes!

  requester: Bytes!

  identifier: String!

  ancillaryData: String!

  customBond: BigInt!
}

type CustomLiveness @entity {
  "ID is managedRequestId, ie. the hash of requester, identifier, ancillaryData"
  id: ID!

  requester: Bytes!

  identifier: String!

  ancillaryData: String!

  customLiveness: BigInt!
}
