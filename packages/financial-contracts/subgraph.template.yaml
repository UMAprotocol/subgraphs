specVersion: 0.0.2
description: Subgraph with support for the DVM data and synthetic tokens made with UMA, as well as supported identifiers, token holder balances and many more.
repository: https://github.com/UMAprotocol/subgraphs
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Registry
    network: {{network}}
    source:
      address: "{{registryAddress}}"
      abi: Registry
      startBlock: {{registryStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - FinancialContract
        - ContractCreator
        - User
      abis:
        - name: Registry
          file: ./abis/Registry.json
        - name: ExpiringMultiPartyCreator
          file: ./abis/ExpiringMultiPartyCreator.json
        - name: PerpetualCreator
          file: ./abis/PerpetualCreator.json
      eventHandlers:
        - event: NewContractRegistered(indexed address,indexed address,address[])
          handler: handleNewContractRegistered
templates:
  - name: PerpetualCreator
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: PerpetualCreator
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - ContractCreator
        - FinancialContract
      abis:
        - name: PerpetualCreator
          file: ./abis/PerpetualCreator.json
        - name: ExpiringMultiPartyCreator
          file: ./abis/ExpiringMultiPartyCreator.json
        - name: Perpetual
          file: ./abis/Perpetual.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: CreatedPerpetual(indexed address,indexed address)
          handler: handleCreatedPerpetual
  - name: Perpetual
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: Perpetual
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - FinancialContract
      abis:
        - name: Perpetual
          file: ./abis/Perpetual.json
      eventHandlers:
        - event: PositionCreated(indexed address,indexed uint256,indexed uint256)
          handler: handlePositionCreatedPerp
        - event: Redeem(indexed address,indexed uint256,indexed uint256)
          handler: handleRedeemPerp
        - event: FundingRateUpdated(int256,indexed uint256,uint256)
          handler: handleFundingRateUpdated
        - event: Deposit(indexed address,indexed uint256)
          handler: handleDepositPerp
        - event: Withdrawal(indexed address,indexed uint256)
          handler: handleWithdrawalPerp
        - event: FinalFeesPaid(indexed uint256)
          handler: handleFinalFeesPaidPerp
        - event: NewSponsor(indexed address)
          handler: handleNewSponsorPerp
        - event: EndedSponsorPosition(indexed address)
          handler: handleEndedSponsorPositionPerp
        - event: LiquidationCreated(indexed address,indexed address,indexed uint256,uint256,uint256,uint256,uint256)
          handler: handleLiquidationCreatedPerp
        - event: LiquidationDisputed(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleLiquidationDisputedPerp
        - event: DisputeSettled(indexed address,indexed address,indexed address,address,uint256,bool)
          handler: handleDisputeSettledPerp
        - event: RequestWithdrawal(indexed address,indexed uint256)
          handler: handleRequestWithdrawalPerp
        - event: RequestWithdrawalCanceled(indexed address,indexed uint256)
          handler: handleRequestWithdrawalCanceledPerp
        - event: RequestWithdrawalExecuted(indexed address,indexed uint256)
          handler: handleRequestWithdrawalExecutedPerp
  - name: ExpiringMultiPartyCreator
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: ExpiringMultiPartyCreator
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - ContractCreator
        - FinancialContract
      abis:
        - name: ExpiringMultiPartyCreator
          file: ./abis/ExpiringMultiPartyCreator.json
        - name: ExpiringMultiParty
          file: ./abis/ExpiringMultiParty.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: CreatedExpiringMultiParty(indexed address,indexed address)
          handler: handleCreatedExpiringMultiParty
  - name: ExpiringMultiParty
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: ExpiringMultiParty
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - FinancialContract
      abis:
        - name: ExpiringMultiParty
          file: ./abis/ExpiringMultiParty.json
      eventHandlers:
        - event: PositionCreated(indexed address,indexed uint256,indexed uint256)
          handler: handlePositionCreated
        - event: SettleExpiredPosition(indexed address,indexed uint256,indexed uint256)
          handler: handleSettleExpiredPosition
        - event: Redeem(indexed address,indexed uint256,indexed uint256)
          handler: handleRedeem
        - event: Deposit(indexed address,indexed uint256)
          handler: handleDeposit
        - event: Withdrawal(indexed address,indexed uint256)
          handler: handleWithdrawal
        - event: FinalFeesPaid(indexed uint256)
          handler: handleFinalFeesPaid
        - event: NewSponsor(indexed address)
          handler: handleNewSponsor
        - event: EndedSponsorPosition(indexed address)
          handler: handleEndedSponsorPosition
        - event: LiquidationCreated(indexed address,indexed address,indexed uint256,uint256,uint256,uint256)
          handler: handleLiquidationCreated
        - event: LiquidationCreated(indexed address,indexed address,indexed uint256,uint256,uint256,uint256,uint256)
          handler: handleLiquidationCreatedNew
        - event: LiquidationDisputed(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleLiquidationDisputed
        - event: DisputeSettled(indexed address,indexed address,indexed address,address,uint256,bool)
          handler: handleDisputeSettled
        - event: RequestTransferPosition(indexed address)
          handler: handleRequestTransferPosition
        - event: RequestTransferPositionCanceled(indexed address)
          handler: handleRequestTransferPositionCanceled
        - event: RequestTransferPositionExecuted(indexed address,indexed address)
          handler: handleRequestTransferPositionExecuted
        - event: RequestWithdrawal(indexed address,indexed uint256)
          handler: handleRequestWithdrawal
        - event: RequestWithdrawalCanceled(indexed address,indexed uint256)
          handler: handleRequestWithdrawalCanceled
        - event: RequestWithdrawalExecuted(indexed address,indexed uint256)
          handler: handleRequestWithdrawalExecuted
